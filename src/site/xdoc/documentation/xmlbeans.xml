<document>
  <properties>
    <author email="fgarsombke@yahoo.com">Franz Garsombke</author>
    <title>XMLBeans with dozer</title>
  </properties>
  <head>
    <meta http-equiv="CACHE-CONTROL" name="CACHE-CONTROL" CONTENT="NO-CACHE" />
    <meta http-equiv="PRAGMA" name="PRAGMA" CONTENT="NO-CACHE" />
    <META HTTP-EQUIV="EXPIRES" CONTENT="0" />
  </head>
  <body>
    <section name="3rd Party Object Factories">
      <subsection name="Mapping XMLBeans">
        <p>
          Dozer has support for mapping POJOs to XMLBeans objects. Use the XMLBeanFactory for any XMLBeans you want
          created. This factory will also be used for mapping any fields that need to be instantiated in a deep
          mapping that are not regular POJOs but are XMLBeans.
        </p>
        <source>
          <![CDATA[ 
<mapping wildcard="false">
  <class-a>net.sf.dozer.util.mapping.vo.TestObject</class-a>
  <class-b bean-factory="net.sf.dozer.util.mapping.factory.XMLBeanFactory">
    net.sf.dozer.util.mapping.vo.GetWeatherByZipCodeDocument
  </class-b>

  <field>
    <a>one</a>
    <b>GetWeatherByZipCode.zipCode</b>
  </field>    

</mapping>           
         ]]>
        </source>
        <p>The unit test:</p>
        <source>
          <![CDATA[ 
// Map from TestObject to XMLBeans
TestObject to = new TestObject();
to.setOne("one");
GetWeatherByZipCodeDocument doc = 
  (GetWeatherByZipCodeDocument) mapper.map(to, GetWeatherByZipCodeDocument.class);
assertEquals(to.getOne(), doc.getGetWeatherByZipCode().getZipCode());

// Map from XMLBeans to TestObject
GetWeatherByZipCodeDocument res = GetWeatherByZipCodeDocument.Factory.newInstance();
GetWeatherByZipCode zipCode = res.addNewGetWeatherByZipCode();
zipCode.setZipCode("one");
TestObject to2 = (TestObject) mapper.map(res, TestObject.class);
assertEquals(res.getGetWeatherByZipCode().getZipCode(), to2.getOne());
        ]]>
        </source>
      </subsection>
      <subsection name="JAXB">
        <p>
          Dozer has support for mapping POJOs to JAXB objects. Use the JAXBBeanFactory for any JAXB objects you
          want created.
        </p>
      </subsection>
    </section>
  </body>
</document>