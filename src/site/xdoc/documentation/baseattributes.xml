<document>
  <properties>
    <author email="fgarsombke@yahoo.com">Franz Garsombke</author>
    <title>Inheritance Mapping</title>
  </properties>
  <head>
    <meta http-equiv="CACHE-CONTROL" name="CACHE-CONTROL" CONTENT="NO-CACHE" />
    <meta http-equiv="PRAGMA" name="PRAGMA" CONTENT="NO-CACHE" />
    <META HTTP-EQUIV="EXPIRES" CONTENT="0" />
  </head>
  <body>
    <section name="Inheritance Mapping">
      <subsection name="Reducing Mapping XML when using base class attributes">
        <p>
          <b>
            Properties that are of the same name do not need to be specified in the mapping xml file unless hints
            are needed.
          </b>
        </p>

        <p>
          If you are mapping subclasses that also have have base class attributes requiring mapping XML, you might
          be inclined to reproduce base class field maps in each subclass mapping element, like the following
          example:
        </p>
        <source>
          <![CDATA[ 
<mapping>
  <class-a>net.sf.dozer.util.mapping.vo.SubClass</class-a>
  <class-b>net.sf.dozer.util.mapping.vo.SubClassPrime</class-b>
    
  <field>
    <a>superAttribute</a> <!-- this is the same for all sub classes -->
    <b>superAttr</b>
  </field>
    
  <field>
    <a>attribute2</a>
    <b>attributePrime2</b>
  </field>
</mapping>
 
<mapping>
 <class-a>net.sf.dozer.util.mapping.vo.SubClass2</class-a>
 <class-b>net.sf.dozer.util.mapping.vo.SubClassPrime2</class-b>
     
 <field>
   <a>superAttribute</a> <!-- this is the same for all sub classes -->
   <b>superAttr</b>
 </field>
     
 <field>
   <a>attribute2</a>
   <b>attributePrime2</b>
 </field>
</mapping>
 
              ]]>
        </source>
        <p>
          In the previous mapping, some of the fields were from a common base class, but you had to reproduce them
          into each mapping of the sub classes.
        </p>
        <p>
          However, a better way to do it would be to map the base class individually. This can be done for each
          base class (in the case of a larger heirarchy). Assuming the base class name, below is the refactored
          mapping xml:
        </p>

        <source>
          <![CDATA[ 
<mapping>
  <class-a>net.sf.dozer.util.mapping.vo.SuperClass</class-a>
  <class-b>net.sf.dozer.util.mapping.vo.SuperClassPrime</class-b>
    
  <field>
    <a>superAttribute</a>
    <b>superAttr</b>
  </field>
</mapping>  

<mapping>
  <class-a>net.sf.dozer.util.mapping.vo.SubClass</class-a>
  <class-b>net.sf.dozer.util.mapping.vo.SubClassPrime</class-b>
    
  <field>
    <a>attribute</a>
    <b>attributePrime</b>
  </field>
</mapping>
  
<mapping>
  <class-a>net.sf.dozer.util.mapping.vo.SubClass2</class-a>
  <class-b>net.sf.dozer.util.mapping.vo.SubClassPrime2</class-b>
     
  <field>
    <a>attribute2</a>
    <b>attributePrime2</b>
  </field>
</mapping>
              ]]>
        </source>
        <p>The following images explain some of the different scenarios dozer handles:</p>
        <p>
          <img src="../images/scenario1.jpg" />
        </p>
        <p>Scenario 1</p>
        <p>
          <img src="../images/scenario2.jpg" />
        </p>
        <p>Scenario 2</p>
        <p>
          <img src="../images/scenario3.jpg" />
        </p>
        <p>Scenario 3</p>

      </subsection>
    </section>
  </body>
</document>